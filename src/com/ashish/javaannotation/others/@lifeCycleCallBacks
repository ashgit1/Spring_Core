Lifecycle Callbacks:
--------------------

The @Bean annotation supports specifying arbitrary initialization and destruction callback methods, 
much like Spring XML's init-method and destroy-method attributes on the bean element:

public class Foo {
   public void init() {
      // initialization logic
   }
   public void cleanup() {
      // destruction logic
   }
}

@Configuration
public class AppConfig {
   @Bean(initMethod = "init", destroyMethod = "cleanup" )
   public Foo foo() {
      return new Foo();
   }
}

Specifying Bean Scope:
----------------------

The default scope is singleton, but you can override this with the @Scope annotation as follows:

@Configuration
public class AppConfig {
   @Bean
   @Scope("prototype")
   public Foo foo() {
      return new Foo();
   }
}

